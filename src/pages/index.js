import { useEffect, useState } from 'react';
import Head from 'next/head';
import InitialLoading from '@/Components/InitialLoading';
import About from '@/Components/About';
import Contact from '@/Components/Contact';
import Footer from '@/Components/Footer';
import Header from '@/Components/Header';
import Introduction from '@/Components/Introduction';
import Projects from '@/Components/Projects';
import AboutParallax from '@/Components/AboutParallax';

//import LocomotiveScroll from 'locomotive-scroll';
import Lenis from 'lenis';
import { AnimatePresence } from 'framer-motion';
import { gsap } from 'gsap';
import { ScrollTrigger } from 'gsap/dist/ScrollTrigger';

export default function Home() {
    const [isLoading, setIsLoading] = useState(true);
    {
        /*  useEffect(() => {
        const lenis = new Lenis();

        function raf(time) {
            lenis.raf(time);
            requestAnimationFrame(raf);
        }

        requestAnimationFrame(raf);
    }, []); */
    }

    useEffect(() => {
        (async () => {
            const LocomotiveScroll = (await import('locomotive-scroll'))
                .default;
            const locomotiveScroll = new LocomotiveScroll();

            setTimeout(() => {
                setIsLoading(false);
                window.scrollTo(0, 0);
            }, 2300);
        })();
    }, []);

    useEffect(() => {
        gsap.registerPlugin(ScrollTrigger);
        const sections = gsap.utils.toArray('.section');

        const switchColor = (color) => {
            gsap.to(document.body, {
                duration: 0.4,
                ease: 'power1.inOut',
                backgroundColor: color,
                overwrite: 'auto',
            });
        };

        sections.forEach((section, i) => {
            const color = section.dataset.bgcolor;
            //get prev section color or set  kolor czarny
            const previousColor = sections[i - 1]
                ? sections[i - 1].dataset.bgcolor
                : '#000';

            ScrollTrigger.create({
                trigger: section,
                start: 'top center',
                end: 'bottom top',
                onEnter: () => switchColor(color),
                onLeave: () => i === sections.length - 1 && switchColor('#000'),
                onEnterBack: () =>
                    i === sections.length - 1 && switchColor(color),
                onLeaveBack: () => switchColor(previousColor),
                //markers: { indent: 135 * i },
                id: i + 1,
            });
        });

        return () => {
            // Usuń wszystkie instancje ScrollTrigger po unmount
            ScrollTrigger.getAll().forEach((trigger) => trigger.kill());
        };
    }, []);

    return (
        <>
            <Head>
                <title>HUBERT ŁEPSKI - DEV</title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <meta
                    name='viewport'
                    content='width=device-width, initial-scale=1'
                />
                <link rel='icon' href='/favicon.png' />
            </Head>

            <>
                <AnimatePresence mode='wait'>
                    {isLoading && <InitialLoading />}
                </AnimatePresence>
                <Header />

                <Introduction />
                {/*   <article
                    className='bufferBeforeParallax'
                    style={{
                        height: '12.5vh',
                        zIndex: '2',
                        position: 'relative',
                        backgroundColor: '#000',
                    }}
                ></article>*/}
                <AboutParallax />
                <About />
                <Projects />
                <Contact />
                <Footer />
            </>
        </>
    );
}
